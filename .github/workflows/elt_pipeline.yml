name: ELT Pipeline
on:
  workflow_dispatch:

env:
    DESTINATION__SNOWFLAKE__CREDENTIALS__HOST: ${{ secrets.DESTINATION__SNOWFLAKE__CREDENTIALS__HOST }}
    DESTINATION__SNOWFLAKE__CREDENTIALS__USERNAME: ${{ secrets.DESTINATION__SNOWFLAKE__CREDENTIALS__USERNAME }}
    DESTINATION__SNOWFLAKE__CREDENTIALS__PASSWORD: ${{ secrets.DESTINATION__SNOWFLAKE__CREDENTIALS__PASSWORD }}
    DESTINATION__SNOWFLAKE__CREDENTIALS__ROLE: ${{ secrets.DESTINATION__SNOWFLAKE__CREDENTIALS__ROLE }}
    DESTINATION__SNOWFLAKE__CREDENTIALS__WAREHOUSE: ${{ secrets.DESTINATION__SNOWFLAKE__CREDENTIALS__WAREHOUSE }}
    DESTINATION__SNOWFLAKE__CREDENTIALS__DATABASE: ${{ secrets.DESTINATION__SNOWFLAKE__CREDENTIALS__DATABASE }}

    TRANSFORMATIONS__SNOWFLAKE__CREDENTIALS__DATABASE: ${{ secrets.TRANSFORMATIONS__SNOWFLAKE__CREDENTIALS__DATABASE }}
    TRANSFORMATIONS__SNOWFLAKE__CREDENTIALS__SCHEMA: ${{ secrets.TRANSFORMATIONS__SNOWFLAKE__CREDENTIALS__SCHEMA }}
    TRANSFORMATIONS__SNOWFLAKE__CREDENTIALS__USERNAME: ${{ secrets.TRANSFORMATIONS__SNOWFLAKE__CREDENTIALS__USERNAME }}
    TRANSFORMATIONS__SNOWFLAKE__CREDENTIALS__PASSWORD: ${{ secrets.TRANSFORMATIONS__SNOWFLAKE__CREDENTIALS__PASSWORD }}
    TRANSFORMATIONS__SNOWFLAKE__CREDENTIALS__ROLE: ${{ secrets.TRANSFORMATIONS__SNOWFLAKE__CREDENTIALS__ROLE }}
    TRANSFORMATIONS__SNOWFLAKE__CREDENTIALS__WAREHOUSE: ${{ secrets.TRANSFORMATIONS__SNOWFLAKE__CREDENTIALS__WAREHOUSE }}

    SOURCES__MONGODB__CONNECTION_URL: ${{ secrets.SOURCES__MONGODB__CONNECTION_URL }}

    DBT_PROJECT_DIR: transformations/mongo_transformations
    DBT_PROFILES_DIR: transformations/mongo_transformations

jobs:
  ingestion-mflix:
    name: Ingestion Mflix
    environment: Deployment
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pipenv'
      - name: Install Pipenv
        run: |
          pip install --user pipenv
          pipenv install
      - name: Run Mflix Pipeline
        run: |
          echo "Running Mflix Pipeline"
          pipenv run python ingestion/mongodb_mflix.py

  ingestion-supplies:
    name: Ingestion Supplies
    needs: ingestion-mflix
    environment: Deployment
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pipenv'
      - name: Install Pipenv
        run: |
          pip install --user pipenv
          pipenv install
      - name: Run Supplies Pipeline
        run: |
          echo "Running Supplies Pipeline"
          pipenv run python ingestion/mongodb_sales.py

  dbt-transformations:
    name: Run dbt Transformations
    environment: Deployment
    needs: ingestion-supplies
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pipenv'
      - name: Install Pipenv
        run: |
          pip install --user pipenv
          pipenv install
      - name: Install dbt dependencies
        run: | 
          pipenv run dbt deps
      - name: Run and test models
        if: ${{ success() }}
        run: |
          pipenv run dbt build
          